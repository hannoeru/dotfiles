# Environment Setup
# Shell Agnostic. Should work both with bash and zsh

#
# PATH
#

function add_to_path() {
  # Does the alias only if the aliased program is installed
    if [ -d $1 ]; then
        export PATH="$1:$PATH"
    fi
}

add_to_path "/usr/local/bin"
add_to_path "/usr/local/sbin"
add_to_path "$HOME/bin"
# Custom scripts
add_to_path "$HOME/.local/bin"
# Node.js
# add_to_path "$HOME/.nodebrew/current/bin"
# OpenSSL
add_to_path "/uer/local/opt/openssl/bin"
# gettext
add_to_path "/usr/local/opt/gettext/bin"
# Flutter SDK
add_to_path "$HOME/development/flutter/bin"
# Generate gRPC Web Client
add_to_path "$HOME/development/grpc"

#
# C C++
#

# export LDFLAGS="-L/usr/local/opt/zlib/lib"
# export CPPFLAGS="-I/usr/local/opt/zlib/include"


#
# Docker
#

export DOCKER_HOST="ssh://ubuntu@docker.local"


#
# Python
#

export PYENV_ROOT=/usr/local/var/pyenv
add_to_path "$PYENV_ROOT/shims"

if which pyenv > /dev/null 2>&1; then
    _evalcache pyenv init -
    _evalcache pyenv virtualenv-init -
fi


#
# Deno
#

# Set deno dir
export DENO_DIR=$HOME/.deno

# Add to path
add_to_path "$HOME/.deno/bin"

#
# Golang
#

# Add GOPATH
export GOPATH="$HOME/go"

# Add to PATH
add_to_path "$GOPATH/bin"

#
# JAVA
#

export JAVA_HOME=$(/usr/libexec/java_home -v 14)

add_to_path "$JAVA_HOME/bin"

#
# Android
#

export ANDROID_HOME="$HOME/Library/Android/sdk"

add_to_path "$ANDROID_HOME/bin"

#
# kubectl
#

# export KUBECONFIG="~/.kube/k3s.yaml"

#
# Homebrew
#

if [ -f $(brew --prefix)/etc/brew-wrap ];then
    source $(brew --prefix)/etc/brew-wrap
fi

#
# Google Cloud
#

# The next line updates PATH for the Google Cloud SDK.
if [ -f '~/google-cloud-sdk/path.zsh.inc' ]; then
    source ~/google-cloud-sdk/path.zsh.inc 
fi

# The next line enables shell command completion for gcloud.
if [ -f '~/google-cloud-sdk/completion.zsh.inc' ]; then
    source ~/google-cloud-sdk/completion.zsh.inc
fi

#
# DEFAULT COLORS/PROGRAMS
#

# CLI colors
export CLICOLOR=1
export LSCOLORS=gxBxhxDxfxhxhxhxhxcxcx

# Configure Editor
if which nvim >/dev/null 2>&1; then
    export EDITOR='nvim'
else
    export EDITOR='vim'
fi

#
# Ruby
#

export RBENV_ROOT="$HOME/.rbenv"
add_to_path "$RBENV_ROOT/bin"

if which rbenv > /dev/null 2>&1; then
  _evalcache rbenv init -
fi

#
# Misc Software
#

# PlatformIO
export PIOROOT=$HOME/.platformio
add_to_path "$PIOROOT/penv/bin"

#
# LOCAL ENV
#

if [ -f ~/.local-env ]; then
    source ~/.local-env
fi
